/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../common";

export declare namespace HDLibrary {
  export type StatsStruct = {
    hp: PromiseOrValue<BigNumberish>;
    strength: PromiseOrValue<BigNumberish>;
    agility: PromiseOrValue<BigNumberish>;
    resistance: PromiseOrValue<BigNumberish>;
  };

  export type StatsStructOutput = [
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber
  ] & {
    hp: BigNumber;
    strength: BigNumber;
    agility: BigNumber;
    resistance: BigNumber;
  };

  export type AttributeStruct = {
    faction: PromiseOrValue<string>;
    Rarity: PromiseOrValue<string>;
    level: PromiseOrValue<BigNumberish>;
    stats: HDLibrary.StatsStruct;
  };

  export type AttributeStructOutput = [
    string,
    string,
    BigNumber,
    HDLibrary.StatsStructOutput
  ] & {
    faction: string;
    Rarity: string;
    level: BigNumber;
    stats: HDLibrary.StatsStructOutput;
  };

  export type MetadataStruct = {
    name: PromiseOrValue<string>;
    description: PromiseOrValue<string>;
    image: PromiseOrValue<string>;
    derivedCapsule: PromiseOrValue<BytesLike>;
    attributes: HDLibrary.AttributeStruct;
  };

  export type MetadataStructOutput = [
    string,
    string,
    string,
    string,
    HDLibrary.AttributeStructOutput
  ] & {
    name: string;
    description: string;
    image: string;
    derivedCapsule: string;
    attributes: HDLibrary.AttributeStructOutput;
  };
}

export interface HDLibraryInterface extends utils.Interface {
  functions: {
    "filMetadatas(uint256,(string,string,string,bytes32,(string,string,uint256,(uint256,uint256,uint256,uint256))))": FunctionFragment;
    "getTokenURI(uint256,(string,string,string,bytes32,(string,string,uint256,(uint256,uint256,uint256,uint256))))": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic: "filMetadatas" | "getTokenURI"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "filMetadatas",
    values: [PromiseOrValue<BigNumberish>, HDLibrary.MetadataStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "getTokenURI",
    values: [PromiseOrValue<BigNumberish>, HDLibrary.MetadataStruct]
  ): string;

  decodeFunctionResult(
    functionFragment: "filMetadatas",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTokenURI",
    data: BytesLike
  ): Result;

  events: {};
}

export interface HDLibrary extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: HDLibraryInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    filMetadatas(
      tokenId: PromiseOrValue<BigNumberish>,
      _tokenMetadata: HDLibrary.MetadataStruct,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getTokenURI(
      tokenId: PromiseOrValue<BigNumberish>,
      _tokenMetadata: HDLibrary.MetadataStruct,
      overrides?: CallOverrides
    ): Promise<[string]>;
  };

  filMetadatas(
    tokenId: PromiseOrValue<BigNumberish>,
    _tokenMetadata: HDLibrary.MetadataStruct,
    overrides?: CallOverrides
  ): Promise<string>;

  getTokenURI(
    tokenId: PromiseOrValue<BigNumberish>,
    _tokenMetadata: HDLibrary.MetadataStruct,
    overrides?: CallOverrides
  ): Promise<string>;

  callStatic: {
    filMetadatas(
      tokenId: PromiseOrValue<BigNumberish>,
      _tokenMetadata: HDLibrary.MetadataStruct,
      overrides?: CallOverrides
    ): Promise<string>;

    getTokenURI(
      tokenId: PromiseOrValue<BigNumberish>,
      _tokenMetadata: HDLibrary.MetadataStruct,
      overrides?: CallOverrides
    ): Promise<string>;
  };

  filters: {};

  estimateGas: {
    filMetadatas(
      tokenId: PromiseOrValue<BigNumberish>,
      _tokenMetadata: HDLibrary.MetadataStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getTokenURI(
      tokenId: PromiseOrValue<BigNumberish>,
      _tokenMetadata: HDLibrary.MetadataStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    filMetadatas(
      tokenId: PromiseOrValue<BigNumberish>,
      _tokenMetadata: HDLibrary.MetadataStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getTokenURI(
      tokenId: PromiseOrValue<BigNumberish>,
      _tokenMetadata: HDLibrary.MetadataStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
